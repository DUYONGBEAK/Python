{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "import time\n",
    "import pandas as pd\n",
    "from selenium import webdriver\n",
    "# 브라우저 내에서 진행할 키보드로 입력받는 액션을 진행하기 위한 과정\n",
    "from selenium.webdriver.common.keys import Keys\n",
    "\n",
    "# 웹브라우저를 자동으로 띄우기 위한 과정\n",
    "options = webdriver.ChromeOptions()\n",
    "options.add_argument(\"window-size=1920x1080\")\n",
    "driver_loc = \"chromedriver/chromedriver.exe\"\n",
    "\n",
    "# 브라우저를 띄움\n",
    "driver = webdriver.Chrome(executable_path = driver_loc, options = options)\n",
    "\n",
    "# 다음단계로 넘어갈 때 최대 (3초) 기다림 * 페이지가 1줄이라도 뜨면\n",
    "time.sleep(3)\n",
    "\n",
    "# 브라우저 내에서 진행할 액션을 입력한다.\n",
    "googleUrl = \"https://www.google.co.kr/\"\n",
    "\n",
    "driver.get(googleUrl)\n",
    "\n",
    "# 최대화\n",
    "driver.maximize_window()\n",
    "time.sleep(3)\n",
    "# 구글 검색창의 xpath를 찾아서 검색창에 라이엇을 입력한다.\n",
    "googleSearchXpath = \"/html/body/div[1]/div[3]/form/div[1]/div[1]/div[1]/div/div[2]/input\"\n",
    "googleSearchBox = driver.find_element_by_xpath(googleSearchXpath)\n",
    "searchKeyword = \"라이엇\"\n",
    "googleSearchBox.send_keys(searchKeyword)\n",
    "time.sleep(3)\n",
    "# 검색창에 입력한 검색어를 검색하기 위한 enter키를 누른다.\n",
    "googleSearchBox.send_keys(Keys.ENTER)\n",
    "\n",
    "time.sleep(3)\n",
    "googleClickXpath = '//*[@id=\"rso\"]/div[1]/div[1]/div/div/div/div[1]/a/h3'\n",
    "googleClickhBox = driver.find_element_by_xpath(googleClickXpath)\n",
    "googleClickhBox.click()\n",
    "\n",
    "time.sleep(3)\n",
    "lolClickXpath = '//*[@id=\"riotbar-navbar\"]/div[10]/a'\n",
    "lolClickhBox = driver.find_element_by_xpath(lolClickXpath)\n",
    "lolClickhBox.click()\n",
    "\n",
    "time.sleep(3)\n",
    "# 최근 열린 탭으로 전환\n",
    "driver.switch_to.window(driver.window_handles[-1])\n",
    "\n",
    "# 로딩 기다리기\n",
    "time.sleep(3)\n",
    "\n",
    "import pandas as pd\n",
    "from bs4 import BeautifulSoup\n",
    "import requests\n",
    "\n",
    "# 셀레니움을 다 진행한뒤 크롤링을 진행하기 위한 연결단계\n",
    "\n",
    "fianlUrl = driver.current_url\n",
    "pgSource = driver.page_source\n",
    "resp = requests.get(url = fianlUrl)\n",
    "resp.encoding = \"utf-8\"\n",
    "\n",
    "bsObj = BeautifulSoup(resp.text, \"html.parser\")\n",
    "\n",
    "# 크롤링 결과물을 담을 리스트 생성\n",
    "priceList = []\n",
    "nameList = []\n",
    "titleList = []\n",
    "\n",
    "# 태그추출을 통해 상품명과 가격을 각각 뽑아옴\n",
    "divTag = bsObj.find(name = \"div\")\n",
    "pTag = divTag.find_all(\"p\", {\"class\" : \"product-name\"})\n",
    "bTag = divTag.find_all(\"b\", {\"class\" : \"\"})\n",
    "\n",
    "# 상품명을 리스트에 넣음\n",
    "for i in range(0,len(pTag)):\n",
    "    nameTag = pTag[i].text\n",
    "    nameList.append(nameTag)\n",
    "\n",
    "# 가격을 리스트에 넣음\n",
    "for i in range(0,len(bTag)):\n",
    "    priceTag = bTag[i].text\n",
    "    priceList.append(priceTag)\n",
    "\n",
    "# 두 리스트를 합쳐서 데이터프레임을 씌움\n",
    "titleList = pd.DataFrame(zip(nameList, priceList))\n",
    "\n",
    "# 컬럼명 맵핑하기\n",
    "titleList.columns = [\"상품\",\"가격\"]\n",
    "\n",
    "#출력\n",
    "titleList\n",
    "\n",
    "answer = titleList.to_csv(\"./crawling.csv\", encoding=\"ms949\" , index=False)\n",
    "\n",
    "# 메일전송 자동화 작업\n",
    "import smtplib\n",
    "from email.message import EmailMessage\n",
    "\n",
    "# gmail 메일 설정\n",
    "smtp_gmail = smtplib.SMTP('smtp.gmail.com', 587)\n",
    "\n",
    "# 서버연결을 설정\n",
    "smtp_gmail.ehlo()\n",
    "\n",
    "# 연결을 암호화\n",
    "smtp_gmail.starttls()\n",
    "\n",
    "# 로그인\n",
    "userid = \"dybaek411\"\n",
    "userpw = \"zhxblijzydutsfrn\"\n",
    "smtp_gmail.login(userid, userpw)\n",
    "\n",
    "# 이메일을 보내기 위한 작업\n",
    "msg=EmailMessage()\n",
    "\n",
    "# 제목 입력\n",
    "msg['Subject']=\"퀴즈 정보\"\n",
    "\n",
    "# 내용 입력\n",
    "msg.set_content(\"퀴즈 내용\")\n",
    "\n",
    "# 첨부할 파일을 불러온 뒤 읽어서 메일에 첨부하는 과정\n",
    "file2 = 'crawling.csv'\n",
    "fp2 = open(file2,'rb')\n",
    "file_data=fp2.read()\n",
    "msg.add_attachment(file_data, maintype='text', subtype='plain', filename=file2)\n",
    "\n",
    "# 발신자 정보\n",
    "msg['From']='dybaek411@gmail.com'\n",
    "\n",
    "# 수진자 정보\n",
    "msg['To'] = \"dybaek411@naver.com\"\n",
    "\n",
    "# 메일 전송\n",
    "smtp_gmail.send_message(msg)\n",
    "smtp_gmail.close()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
